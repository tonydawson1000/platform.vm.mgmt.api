// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace Platform.Vm.Mgmt.Persistence.EfCore.Migrations
{
    [DbContext(typeof(PlatformVmMgmtDbContext))]
    [Migration("20250313201731_AllInOne")]
    partial class AllInOne
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Platform.Vm.Mgmt.Domain.Entities.DataCentre", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Sequence")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DataCentres");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d18519b3-4b35-4d5a-8720-2593881615e5"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Primary DC",
                            IsEnabled = true,
                            Location = "London, UK",
                            Name = "Sov House",
                            Sequence = 1
                        },
                        new
                        {
                            Id = new Guid("d28519b3-4b35-4d5a-8720-2593881615e5"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Secondary DC",
                            IsEnabled = true,
                            Location = "London, UK",
                            Name = "Power Gate",
                            Sequence = 2
                        },
                        new
                        {
                            Id = new Guid("d38519b3-4b35-4d5a-8720-2593881615e5"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "DC in the North",
                            IsEnabled = true,
                            Location = "Manchester, UK",
                            Name = "MA-4",
                            Sequence = 3
                        });
                });

            modelBuilder.Entity("Platform.Vm.Mgmt.Domain.Entities.Environment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DataCentreId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Sequence")
                        .HasColumnType("int");

                    b.Property<int>("Tier")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DataCentreId");

                    b.ToTable("Environments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e1b64577-1c93-4d83-a160-d0c100b75c0c"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataCentreId = new Guid("d28519b3-4b35-4d5a-8720-2593881615e5"),
                            Description = "Houses resources required for development purposes, including (but not limited to) day-to-day development, automated integration (INT) testing, systems integration testing (SIT), internal demos.",
                            IsEnabled = true,
                            Name = "Development",
                            Sequence = 1,
                            Tier = 4
                        },
                        new
                        {
                            Id = new Guid("e2b64577-1c93-4d83-a160-d0c100b75c0c"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataCentreId = new Guid("d28519b3-4b35-4d5a-8720-2593881615e5"),
                            Description = "Provides the environment for operational acceptance testing, including failover and performance testing.",
                            IsEnabled = true,
                            Name = "Operational Acceptance Testing",
                            Sequence = 2,
                            Tier = 3
                        },
                        new
                        {
                            Id = new Guid("e3b64577-1c93-4d83-a160-d0c100b75c0c"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataCentreId = new Guid("d28519b3-4b35-4d5a-8720-2593881615e5"),
                            Description = "Final verification testing for software changes from customer end-users.",
                            IsEnabled = true,
                            Name = "User Acceptance Testing",
                            Sequence = 3,
                            Tier = 2
                        },
                        new
                        {
                            Id = new Guid("e4b64577-1c93-4d83-a160-d0c100b75c0c"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataCentreId = new Guid("d18519b3-4b35-4d5a-8720-2593881615e5"),
                            Description = "Live operational environment at the very highest level of isolation. This houses the services that customers pay to use at a 99.9% availability SLA.",
                            IsEnabled = true,
                            Name = "Production Systems",
                            Sequence = 4,
                            Tier = 1
                        });
                });

            modelBuilder.Entity("Platform.Vm.Mgmt.Domain.Entities.TimeZone", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Sequence")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TimeZones");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a1b54577-1c93-4d83-a160-d0c100b75c0c"),
                            Code = "GMT",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Europe/London",
                            IsEnabled = true,
                            Name = "Europe/London",
                            Sequence = 1
                        });
                });

            modelBuilder.Entity("Platform.Vm.Mgmt.Domain.Entities.Vlan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid>("EnvironmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Sequence")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EnvironmentId");

                    b.ToTable("Vlans");

                    b.HasData(
                        new
                        {
                            Id = new Guid("113d0837-e1e4-4078-8da3-9f62a4c33c58"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "VLAN in DEV",
                            EnvironmentId = new Guid("e1b64577-1c93-4d83-a160-d0c100b75c0c"),
                            IsEnabled = true,
                            Name = "VLAN113",
                            Sequence = 1
                        },
                        new
                        {
                            Id = new Guid("155d0837-e1e4-4078-8da3-9f62a4c33c58"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "VLAN in UAT",
                            EnvironmentId = new Guid("e3b64577-1c93-4d83-a160-d0c100b75c0c"),
                            IsEnabled = true,
                            Name = "VLAN155",
                            Sequence = 3
                        },
                        new
                        {
                            Id = new Guid("600d0837-e1e4-4078-8da3-9f62a4c33c58"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "VLAN in PROD",
                            EnvironmentId = new Guid("e4b64577-1c93-4d83-a160-d0c100b75c0c"),
                            IsEnabled = true,
                            Name = "VLAN600",
                            Sequence = 4
                        });
                });

            modelBuilder.Entity("Platform.Vm.Mgmt.Domain.Entities.VmOrder", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid>("EnvironmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PrimaryContactEmail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PrimaryContactName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TeamName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("TimeZoneId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("VmOrderPlaced")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EnvironmentId");

                    b.HasIndex("TimeZoneId");

                    b.ToTable("VmOrders");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a1b64577-1c93-4d83-a160-d0c100b75c0c"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "VM Order - 3 Small RHEL 8 VMs for Apache Focus",
                            EnvironmentId = new Guid("e1b64577-1c93-4d83-a160-d0c100b75c0c"),
                            Name = "Apache Focus in Dev",
                            PrimaryContactEmail = "john.doe@email.com",
                            PrimaryContactName = "John Doe",
                            TeamName = "Apache Focus Team",
                            TimeZoneId = new Guid("a1b54577-1c93-4d83-a160-d0c100b75c0c"),
                            VmOrderPlaced = new DateTime(2025, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("b1b64577-1c93-4d83-a160-d0c100b75c0c"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "VM Order - 2 Medium RHEL 9 VMs for Apache Delta",
                            EnvironmentId = new Guid("e1b64577-1c93-4d83-a160-d0c100b75c0c"),
                            Name = "Apache Delta in Dev",
                            PrimaryContactEmail = "jane.doe@email.com",
                            PrimaryContactName = "Jane Doe",
                            TeamName = "Apache Delta Team",
                            TimeZoneId = new Guid("a1b54577-1c93-4d83-a160-d0c100b75c0c"),
                            VmOrderPlaced = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Platform.Vm.Mgmt.Domain.Entities.VmOrderDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("VmOrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("VmSizeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("VmTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("VmOrderId");

                    b.HasIndex("VmSizeId");

                    b.HasIndex("VmTypeId");

                    b.ToTable("VmOrderDetails");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b1b64577-1c93-4d83-a160-d0c100b75c0c"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VmOrderId = new Guid("a1b64577-1c93-4d83-a160-d0c100b75c0c"),
                            VmSizeId = new Guid("a1b74577-1c93-4d83-a160-d0c100b75c0c"),
                            VmTypeId = new Guid("a1b64577-1c93-4d83-a160-d0c100b75c0c")
                        },
                        new
                        {
                            Id = new Guid("b2b64577-1c93-4d83-a160-d0c100b75c0c"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VmOrderId = new Guid("a1b64577-1c93-4d83-a160-d0c100b75c0c"),
                            VmSizeId = new Guid("a1b74577-1c93-4d83-a160-d0c100b75c0c"),
                            VmTypeId = new Guid("a1b64577-1c93-4d83-a160-d0c100b75c0c")
                        },
                        new
                        {
                            Id = new Guid("b3b64577-1c93-4d83-a160-d0c100b75c0c"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VmOrderId = new Guid("a1b64577-1c93-4d83-a160-d0c100b75c0c"),
                            VmSizeId = new Guid("a1b74577-1c93-4d83-a160-d0c100b75c0c"),
                            VmTypeId = new Guid("a1b64577-1c93-4d83-a160-d0c100b75c0c")
                        },
                        new
                        {
                            Id = new Guid("c1b64577-1c93-4d83-a160-d0c100b75c0c"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VmOrderId = new Guid("b1b64577-1c93-4d83-a160-d0c100b75c0c"),
                            VmSizeId = new Guid("a2b74577-1c93-4d83-a160-d0c100b75c0c"),
                            VmTypeId = new Guid("a2b64577-1c93-4d83-a160-d0c100b75c0c")
                        },
                        new
                        {
                            Id = new Guid("c2b64577-1c93-4d83-a160-d0c100b75c0c"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VmOrderId = new Guid("b1b64577-1c93-4d83-a160-d0c100b75c0c"),
                            VmSizeId = new Guid("a2b74577-1c93-4d83-a160-d0c100b75c0c"),
                            VmTypeId = new Guid("a2b64577-1c93-4d83-a160-d0c100b75c0c")
                        });
                });

            modelBuilder.Entity("Platform.Vm.Mgmt.Domain.Entities.VmSize", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CpuCount")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("HddGb")
                        .HasColumnType("int");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RamGb")
                        .HasColumnType("int");

                    b.Property<int?>("Sequence")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("VmSizes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a1b74577-1c93-4d83-a160-d0c100b75c0c"),
                            CpuCount = 2,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Small VM Size",
                            HddGb = 10,
                            IsEnabled = true,
                            Name = "Small",
                            RamGb = 4,
                            Sequence = 1
                        },
                        new
                        {
                            Id = new Guid("a2b74577-1c93-4d83-a160-d0c100b75c0c"),
                            CpuCount = 4,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Medium VM Size",
                            HddGb = 20,
                            IsEnabled = true,
                            Name = "Medium",
                            RamGb = 8,
                            Sequence = 2
                        },
                        new
                        {
                            Id = new Guid("a3b74577-1c93-4d83-a160-d0c100b75c0c"),
                            CpuCount = 8,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Large VM Size",
                            HddGb = 40,
                            IsEnabled = true,
                            Name = "Large",
                            RamGb = 16,
                            Sequence = 3
                        },
                        new
                        {
                            Id = new Guid("a4b74577-1c93-4d83-a160-d0c100b75c0c"),
                            CpuCount = 64,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Gigantic VM Size",
                            HddGb = 500,
                            IsEnabled = false,
                            Name = "Gigantic",
                            RamGb = 256,
                            Sequence = 4
                        });
                });

            modelBuilder.Entity("Platform.Vm.Mgmt.Domain.Entities.VmType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OsType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OsVersion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Sequence")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("VmTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a1b64577-1c93-4d83-a160-d0c100b75c0c"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Red Hat Enterprise 8",
                            IsEnabled = true,
                            Name = "RHEL 8",
                            OsType = "RHEL",
                            OsVersion = "8",
                            Sequence = 1
                        },
                        new
                        {
                            Id = new Guid("a2b64577-1c93-4d83-a160-d0c100b75c0c"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Red Hat Enterprise 9",
                            IsEnabled = true,
                            Name = "RHEL 9",
                            OsType = "RHEL",
                            OsVersion = "9",
                            Sequence = 2
                        },
                        new
                        {
                            Id = new Guid("a3b64577-1c93-4d83-a160-d0c100b75c0c"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Red Hat Enterprise 10",
                            IsEnabled = false,
                            Name = "RHEL 10",
                            OsType = "RHEL",
                            OsVersion = "10",
                            Sequence = 3
                        });
                });

            modelBuilder.Entity("Platform.Vm.Mgmt.Domain.Entities.Environment", b =>
                {
                    b.HasOne("Platform.Vm.Mgmt.Domain.Entities.DataCentre", "DataCentre")
                        .WithMany("Environments")
                        .HasForeignKey("DataCentreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DataCentre");
                });

            modelBuilder.Entity("Platform.Vm.Mgmt.Domain.Entities.Vlan", b =>
                {
                    b.HasOne("Platform.Vm.Mgmt.Domain.Entities.Environment", "Environment")
                        .WithMany("Vlans")
                        .HasForeignKey("EnvironmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Environment");
                });

            modelBuilder.Entity("Platform.Vm.Mgmt.Domain.Entities.VmOrder", b =>
                {
                    b.HasOne("Platform.Vm.Mgmt.Domain.Entities.Environment", "Environment")
                        .WithMany()
                        .HasForeignKey("EnvironmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Platform.Vm.Mgmt.Domain.Entities.TimeZone", "TimeZone")
                        .WithMany()
                        .HasForeignKey("TimeZoneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Environment");

                    b.Navigation("TimeZone");
                });

            modelBuilder.Entity("Platform.Vm.Mgmt.Domain.Entities.VmOrderDetail", b =>
                {
                    b.HasOne("Platform.Vm.Mgmt.Domain.Entities.VmOrder", "VmOrder")
                        .WithMany("VmOrderDetails")
                        .HasForeignKey("VmOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Platform.Vm.Mgmt.Domain.Entities.VmSize", "VmSize")
                        .WithMany()
                        .HasForeignKey("VmSizeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Platform.Vm.Mgmt.Domain.Entities.VmType", "VmType")
                        .WithMany()
                        .HasForeignKey("VmTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VmOrder");

                    b.Navigation("VmSize");

                    b.Navigation("VmType");
                });

            modelBuilder.Entity("Platform.Vm.Mgmt.Domain.Entities.DataCentre", b =>
                {
                    b.Navigation("Environments");
                });

            modelBuilder.Entity("Platform.Vm.Mgmt.Domain.Entities.Environment", b =>
                {
                    b.Navigation("Vlans");
                });

            modelBuilder.Entity("Platform.Vm.Mgmt.Domain.Entities.VmOrder", b =>
                {
                    b.Navigation("VmOrderDetails");
                });
#pragma warning restore 612, 618
        }
    }
}